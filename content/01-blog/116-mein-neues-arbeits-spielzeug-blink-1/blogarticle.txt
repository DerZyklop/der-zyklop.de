Title: Mein neues Arbeits-Spielzeug: blink(1)

----

Date: 2014-12-16

----

Justforrss: 

----

Text: Ich bin ja in der glücklichen Position, dass sich bei mir »Spielzeug« und »Arbeits-Werkzeug« oft überschneiden. Ich habe mir also neues »Arbeits-Spielzeug« gekauft.

(image: img-0559.jpg link: img-0559.jpg title: blink-1)

Das Ding nennt sich [**blink(1)**](http://blink1.thingm.com/) und ist so nerdig wie sein Name. Es macht Licht. In allen hexadezimal möglichen Farben. Es kann auch zwei Farben gleichzeitig. Eine oben eine unten. Angesteuert wird es per command line – zumindest bei mir. Man kann auch [ifttt.com](https://ifttt.com/blink1)-Rezepte dafür anlegen und dann verfärbt es sich, weil man gerade auf Twitter erwähnt wurde, oder eine Facebook-Nachricht bekommen hat, oder weil es draussen bald regnet.

#### blink(1) per command line

Aber das will ich alles gar nicht wissen. Ich habe andere Ideen. Ich habe mir also schnell mal das cli per brew installiert:

```
brew update
brew install blink1
```

Jetzt nur noch das blink(1) eingestöpselt und schon hat man die Macht mit commands wie:

```
blink1-tool --red
```

Das klingt jetzt noch wenig abgefahen. Aber nach kurzem darüber nachdenken, was man damit machen könnte, waren meine ersten Gedanken: Ich will das Kollegen anhand der LED’s sehen ob ich gerade ansprechbar bin oder nicht. Okay.. vielleicht nicht die beste idee, weil das sieht man schon an meinen Kopfhörern. Ich habe trotzdem spaßeshalber mal eben einen Einzeiller geschrieben, der das Gerät für 20 Minuten Rot färbt und dann wieder in Grün fadet:

```
blink1-tool --rgb= 120,00,00;sleep 3600;blink1-tool --rgb=00,120,00;
```

Nächste Idee: Ich will irgendwie visuelles Feedback für den Status meines Projekts. 

Bei meinen Programmen laufen Prozesse im Hintergrund in der commandline. Die habe ich nicht immer im Blick, was ich aber sollte, denn dass ist auch der Ort an dem gegebenenfalls Errors angezeigt werden. Z.B. wenn mein CoffeeScript oder Sass nicht Compiliert werden konnte, oder wenn irgendwelche dependencies kaputt sind. Mal sehen, vielleicht hat da schon mal jemand was für **node** gebaut… [Check!](https://www.npmjs.org/package/node-blink1 "Check!") Vielleicht hat da ja sogar schon jemand was für den Taskrunner (link: http://gruntjs.com/ text: **grunt**) gebaut… [Check!](https://www.npmjs.org/package/grunt-blink1) 

Ich habe das mal schnell eingerichtet. Jetzt leuchtet mein blink(1) Rot, wenn gerade compiliert wird. Wenn es einen Fehler gibt, bleibt es Rot, wenn nicht wird es Grün. So schnieke! 

Aber was mir noch nicht passte: Ich will nur eine Seite des Getäts dafür nutzen, denn dann kann ich mit der Anderen noch mehr anstellen. Aber das konnte **grunt-blink1** bisher noch nicht. Also schnell mal [das projekt geforkt](https://github.com/DerZyklop/grunt-blink1/tree/mk2_ledIndex) und den support [für den led-index der neueren generation von blink(1)’s eingebaut](https://github.com/shiwano/grunt-blink1/pull/2). 
Hach.. OpenSource. Du bist gut zu mir :)

#### Was mache ich also jetzt mit den LED’s auf der zweiten Seite?

Ich würde ja echt gerne meinen Git-Status darüber anzeigen. Vielleicht könnte man irgendwie checken ob mein git sauber ist, oder ob irgendwelche Änderungen noch darauf warten, in das öffentliche Repository übertragen zu werden. Aber wann frage ich den Status ab? Mit einem Cronjob? Hört sich irgendwie dreckig an. Jemand eine idee? Dann [hier](https://twitter.com/DerZyklop) entlang.

----

Tags: work,workflow,raspberrypi,git,grunt,terminal,commandline

----

Language: deutsch

----

Targetgroup: small