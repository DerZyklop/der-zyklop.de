Title: Tipps für Sublime Text Einstellungen

----

Date: 2014-02-17

----

Text: In meinem vorherigen (link: http://localhost:1338/pxwrk/workflow-vom-designer-zum-developer text: Artikel zum Thema Workflow) habe ich einen groben Überblick gegeben, mit welchen Werkzeugen ich so arbeite. Wie angekündigt erkläre ich diesmal wie man es sich im (link: http://www.sublimetext.com/ text: Sublime Text) gemütlich macht. Dieser Artikel soll erstmal nur die Settings erklären. Im folgenden Artikel geht's dann um Plugins für Sublime.

(image: sublime-text.png link: sublime-text.png)

Ich habe lange mit Coda gearbeitet, danach lange mit Espresso, und ich habe auch alle anderen erdenklichen Editoren ausprobiert, von denen ich je gehört habe. Und Sublime Text ist mit Abstand der Beste, der mir je untergekommen ist. Man braucht ein bisschen Überwindung, wenn man noch nicht gewohnt ist viel über die Tastatur statt Maus zu erledigen, aber es lohnt sich.

Ich benutze Sublime Text 2. Alles was ich hier schreibe funktioniert aber mit Version 2 genauso wie mit 3. Der einzig für mich erkennbare Unterschied zwischen den zwei Versionen liegt aber nur darin, dass manche Plugins in der Version 3 nicht mehr funktionieren.

### Color Scheme

Ich öffne also Spotlight per `⌘`+`space` und tippe **Sub** und Enter. Das habe ich mir für alle Programme angewöhnt. Geht einfach schneller als Icon im Dock suchen.

Zuerst, solltet ihr die Farben so einstellen, dass ihr euch wohlfühlt. Ein paar Farbsets findet ihr im Menü unter

> **Sublime Text** > **Preferences** > **Color Scheme**

Interessantere Farbkombinationen findet ihr sehr übersichtlich präsentiert auf (link: http://colorsublime.com/ text: colorsublime.com).

### Theme

Unabhängig von den Syntax-Highlighting-Farben, könnt ihr auch ein anderes Theme für's drumherum wählen. Das vermutlich belibteste/verbreitetste ist (link: https://github.com/buymeasoda/soda-theme/ text: Soda). Auf Github wird auch beschrieben wie man das installiert. Wenn ihr euch noch einen Moment gedulden könnt, dann wartet mal auf meine nächsten Workflow-Artikel. Da erkläre ich euch, wie man Soda ganz einfach per Sublime Package-Manager installieren kann.

### Verhalten

Alle Settings sind in **.json** files definiert. Es gibt verschiedene Settings in verschiedenen Ordnern. Sie werden in einer bestimmten Reihenfolge eingelesen. Schaut mal oben in der Taskleiste nach

> **Sublime Text** > **Preferences** > **Settings - Default**

Hier findet ihr alle Einstellungen die ihr vornehmen könnt. Ihr solltet diese Datei aber besser unberührt lassen. Denn man kann alles was in **Settings - Default** definiert wurde in **Settings - User** überschreiben. Es gibt noch weitere nützliche Settings-Dateien, die ihr im laufe der Zeit kennen lernen werdet. Beispielsweise Betriebsystem-, Programmiersprachen-, und Projekt-Bezogene Einstellungen.

Öffnet mal deine User-Settings (`⌘`+`,`). Die folgende Datei wurde nun im Sublime geöffnet:

`~/Library/"Application Support"/"Sublime Text 3"/Packages/User/Preferences.sublime-settings`

Vermultich ist da noch nichts eingetragen. Scheibt mal rein:

<pre class="language-javascript line-numbers" data-start="1">
<code>{
  "font_size": 15.0
}</code>
</pre>

Wenn ihr jetzt die font_size bspw. auf 20 ändert, werdet ihr sofort, wenn ihr die Datei abspeichert (`⌘`+`s`) die Änderungen sehen.

### Empfehlungen

Bei den folgenden Beispielen, solltet ihr Beachten: Die letzte Zeile in einem Json-Objekt darf nicht mit einem Komma enden.

Ihr solltet umbedingt festlegen, welche Line-Endings und ob ihr lieber Tabs oder Spaces für Einrückungen benutzt. Ihr weißt nicht warum? Dann lest mal den Artikel (link: http://www.der-zyklop.de/pxwrk/tabs-vs-spaces/ text: Tabs vs. Spaces && Line-Endings. Fallstricke der Code-Formatierung). Oder vertraut mir einfach und schreibt zwischen Zeile 1 und Zeile 2 folgendes:

<pre class="language-javascript line-numbers" data-start="2">
<code>  "default_line_ending": "unix",
  "detect_indentation": true,
  "tab_size": 2,
  "translate_tabs_to_spaces": true,
  "draw_white_space": "all",
  "trim_trailing_white_space_on_save": true,</code>
</pre>






Auch sollten Dateien (link: http://robots.thoughtbot.com/no-newline-at-end-of-file text: immer mit einer leeren Zeile) enden.

<pre class="language-javascript line-numbers" data-start="8">
<code>  "ensure_newline_at_eof_on_save": true,</code>
</pre>

Wenn man ganze Projekt-Ordner in Sublime öffnet, dann bekommt man eine Übersicht der Inhalte in der Seitenleiste links. Um dort Ordner besser von Dateien unterscheiden zu können, setze ich:

<pre class="language-javascript line-numbers" data-start="9">
<code>  "bold_folder_labels": true,</code>
</pre>

Damit ich immer sofort weiß in welcher Zeile ich mich befinde setze ich:

<pre class="language-javascript line-numbers" data-start="10">
<code>  "highlight_line": true,</code>
</pre>

Und damit ich immer weiß, ob ich die aktielle Datei abgespeichert habe oder nicht, lasse ich die Text-Farbe im Tab-Reiter ändern.

<pre class="language-javascript line-numbers" data-start="11">
<code>  "highlight_modified_tabs": true,</code>
</pre>


Code wird unübersichtlich, wenn er zu viele Zeichen pro Zeile hat. Also zeichne ich eine Linie nach 80 Zeichen.

<pre class="language-javascript line-numbers" data-start="12">
<code>  "rulers":
  [
    80
  ],</code>
</pre>

Ich nutze die sogenante Minimap (auf der rechten Seite) nicht. Also schalte ich sie über das Menü aus:

> **View** > **Hide Minimap**

Als Schrift verwende ich die Kostenfreie (link: http://www.fontsquirrel.com/fonts/droid-sans-mono text: Droid Sans Mono).

<pre class="language-javascript line-numbers" data-start="16">
<code>  "font_face": "Droid Sans Mono",</code>
</pre>

Und zu guter letzt gibt es eine Reihe an Ordnern, die will ich in meinem Editor nie angezeigt bekommen, weil ich darin auch nie etwas zu ändern habe.

<pre class="language-javascript line-numbers" data-start="17">
<code>  "folder_exclude_patterns": [
    ".sass-cache",
    ".settings",
    ".svn",
    "node_modules",
    ".git"
  ],</code>
</pre>

Das kann man auch mit Dateien machen.

<pre class="language-javascript line-numbers" data-start="24">
<code>  "file_exclude_patterns": [
    ".DS_Store"
  ],</code>
</pre>

Eure Datei müsste jetzt ungefähr (link: https://gist.github.com/DerZyklop/9056427 text: so) aussehen.

---

Wenn euch der Artikel geholfen hat dann lasst mir doch ein *»Danke«* in den Kommentaren. Wenn ihr irgendwelche Tipps für mich habt, her damit. Das nächste mal gibt's weitere nützliche Sublime hints. Wenn ihr also mehr solcher Artikel wollt, stay tuned!

----

Tags: workflow, code, work, sublime, W#2
